#!/bin/bash

cd /srv/samba/share
#echo "starting">>/srv/samba/share/DexRun.log
pkill -e -x DexRun
#echo "Stil alive">>/srv/samba/share/DexRun.log
# -x stops this # don't use the !/bin/bash thing because then pkill will kill Run"DexRun"
#if  [ $(date -d "01/01/1970" +%s) -lt $(date +%s) ]; then
	if  [ $(date -r /srv/samba/share/DexRun +%s) -lt $(date -r /srv/samba/share/DexRun.c +%s) ]; then
		echo "">>/srv/samba/share/DexRun.log
		echo "Compiling DexRun.c $(date -r /srv/samba/share/DexRun.c +%Y%m%d_%H:%M:%S)">>/srv/samba/share/DexRun.log
		echo " replacing DexRun $(date -r /srv/samba/share/DexRun +%Y%m%d%_%H:%M:%S)">>/srv/samba/share/DexRun.log
		cd /usr/src/xillinux/xillybus-lite/demo
		cp -f -p /srv/samba/share/DexRun.c . 
		#-p option copies file date stamp set time before editing DexRun.c
		make
		cp -f DexRun /srv/samba/share/.
		touch -t $(date -r DexRun.c +%Y%m%d%H%M.%S) /srv/samba/share/DexRun
		#set the timestamp of the compiled file to that of the source file
		#so we don't keep re-compiling if the date isn't set
		ls -l DexRun >>/srv/samba/share/DexRun.log
		fi
#	fi

# date -r /srv/samba/share/DexRun "+%Y/%m/%d %H:%M:%S"
sed -i "s/DexRun modified.*/DexRun modified $(date -r /srv/samba/share/DexRun +%Y-%m-%dT%H:%M:%SZ)/g" Defaults.make_ins
sed -i "s/xillydemo modified.*/xillydemo modified $(date -r /srv/samba/share/xillydemo.bit +%Y-%m-%dT%H:%M:%SZ)/g" Defaults.make_ins
sed -i "s/OS version.*/OS version $(lsb_release -d -s)/g" Defaults.make_ins

# build a (hopefully) unique mac address in the Xilinx range from robots serial number
dexserial=$(grep -oP '(?<=Dexter Serial Number: DEX-)[0-9].*' Defaults.make_ins)
mac=$(printf "%06x\n" $dexserial)
macserial="00:5D:03:${mac:0:2}:${mac:2:2}:${mac:4:2}"
echo Starting Dexter $dexserial on interface mac address $macserial
sed -i "s/hwaddress ether 00:5D:03.*/hwaddress ether ${macserial}/g" /etc/network/interfaces

cd /srv/samba/share
#echo "running">>/srv/samba/share/DexRun.log
./DexRun 1 3 1 &

#start the local web server
sudo node www/httpd.js & 

#./say-ip #if we make a speaker standard equipment, Dexter can speak it ip

#Start default jobs from autoexec.jobs
sleep 5 #give DexRun time to finish starting
#https://stackoverflow.com/questions/1521462/looping-through-the-content-of-a-file-in-bash
while read -u 10 job; do # the -u 10 uses pipe 10 in place of stdin

  if [[ $job =~ ^#.* ]]
  then
    echo "Ignoring $job"
  else
    if [[ -e /srv/samba/share/dde_apps/$job ]] 
    then
      cd /root/Documents/dde
      echo "/srv/samba/share/dde_apps/$job"
      sudo node core define_and_start_job /srv/samba/share/dde_apps/$job
      sleep 1
    else
      echo "$job not found"
    fi
  fi
done 10< autoexec.jobs 
# pipe to 10 so dde doesn't read lines from autoexec.jobs via stdin

#start default job engine job
#cd /root/Documents/dde
#Find home position from index eyes in code disks, this requires HDI. 
#sleep 5 && sudo node core define_and_start_job /srv/samba/share/dde_apps/Find_Index_Pulses_HDI.dde
#Start Physical interface, see
# https://github.com/HaddingtonDynamics/Dexter/wiki/PhysicalUserInterface
#sleep 1 && sudo node core define_and_start_job /srv/samba/share/dde_apps/PHUI2RCP.js
